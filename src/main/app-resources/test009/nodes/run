#!/opt/anaconda/bin/python
import sys
import os
import os.path
import atexit


# import the ciop functions (e.g. copy, log)
import cioppy

ciop = cioppy.Cioppy()

# define the exit codes
SUCCESS = 0
ERR_NOINPUT = 1

# add a trap to exit gracefully
def clean_exit(exit_code):
    log_level = 'INFO'
    if exit_code != SUCCESS:
        log_level = 'ERROR'

    msg = { SUCCESS: 'Processing successfully concluded',
           ERR_NOINPUT: 'No input provided'}

    ciop.log(log_level, msg[exit_code])

def main():
    ciop.log("INFO", "Retrieve the param value from the application.xml file.")
    param_1 = ciop.getparam('test_1')
    param_2 = ciop.getparam('test_2')
    ciop.log("INFO","Read from application.xml: param_1 = " + param_1 + ", param_2 = " + param_2)
    # Loops over all the inputs
    for inputfile in sys.stdin:
        test_values = os.path.basename(inputfile).split('|')
        if(test_values[0]=="test_1"):
            ciop.log("INFO", "check param_1 equal to "+ test_values[1])
            assert(int(param_1) == int(test_values[1]))
        else:
            ciop.log("INFO", "check param_2 equal to "+ test_values[1])
            assert(int(param_2) == int(test_values[1]))

# execute test
try:
    main()
except SystemExit as e:
    if e.args[0]:
        clean_exit(e.args[0])
    raise
else:
    atexit.register(clean_exit, 0)